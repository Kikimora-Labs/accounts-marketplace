{"version":3,"sources":["images/logo.png","images/tomato.png","images/avocado.gif","components/Helpers.js","components/CardImage.js","components/PriceButton.js","components/CardPreview.js","pages/Market.js","pages/Claims.js","pages/Rules.js","pages/Profile.js","components/Card.js","pages/Account.js","App.js","index.js"],"names":["module","exports","fromNear","s","parseFloat","BuyButton","props","e","a","preventDefault","_near","contract","buy_card","card_id","cardId","price","appCommission","artDaoProfit","ownerPrice","ownerId","newPrice","className","disabled","signedIn","onClick","buyCard","toFixed","loadedCards","loadedImages","cardPreloading","preloadCard","Promise","resolve","Image","onload","onerror","src","CardImage","useState","cardImage","setCardImage","loading","setLoading","badCard","setBadCard","canvasEl","useRef","cardReady","useEffect","then","current","getContext","drawImage","LoadingCard","alt","BrokenCard","ref","width","height","PriceButton","to","CardPreview","rating","setRating","propsRating","fetchRating","useCallback","get_rating","connected","role","DiscoverPage","feed","setFeed","hasMore","setHasMore","uuid","gkey","fetchMore","f","lastKey","length","get_top","from_key","limit","fetched","push","cards","map","key","loader","pageStart","loadMore","StatsPage","setStats","fetchStats","all","get_trade_data","get_num_accounts","t","numAccounts","numPurchases","num_purchases","numUniqueCardsBought","num_unique_cards_bought","nearVolume","near_volume","app_owner_profit","art_dao_profit","appOwnerId","app_owner_id","artDaoId","art_dao_id","totalVotes","total_votes","stats","AccountPage","accountId","useParams","account","setAccount","cardIds","setCardsIds","fetchCards","getAccount","sort","b","signedAccountId","numCards","purchaseVolume","saleProfit","numSales","numVotes","mapCardInfo","c","owner_id","purchasePrice","purchase_price","purchaseTime","Date","purchase_time","volume","numTrades","num_trades","Card","cardInfo","setCardInfo","refreshTime","hidden","fetchInfo","get_card_info","datetime","CardPage","parseInt","NearConfig","window","location","hostname","networkId","nodeUrl","archivalNodeUrl","contractName","walletUrl","mapAccount","requests","num_cards","purchase_volume","sale_profit","num_sales","num_votes","App","lsKey","lsKeyRecentCards","state","isNavCollapsed","recentCards","ls","get","_initNear","setState","keyStore","nearAPI","BrowserLocalStorageKeyStore","Object","assign","deps","near","this","walletConnection","getAccountId","viewMethods","changeMethods","accounts","get_account","account_id","cardFetching","promises","i","get_account_cards","from_index","flat","register_account","requestSignIn","signOut","_accountId","slice","r","index","indexOf","splice","unshift","set","alert","logOut","passProps","updateState","popRequest","addRequest","addRecentCard","refreshAllowance","header","aria-hidden","basename","process","title","Logo","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","href","data-ribbon","exact","path","Rules","Profile","Account","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5cc8f4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.af8e6949.png\";","module.exports = __webpack_public_path__ + \"static/media/tomato.9239fac3.png\";","module.exports = __webpack_public_path__ + \"static/media/avocado.f0698336.gif\";","import React from 'react'\n\nconst fromNear = (s) => parseFloat(s) / 1e24\n\nfunction BuyButton (props) {\n  async function buyCard (e) {\n    e.preventDefault()\n    await props._near.contract.buy_card({ card_id: props.cardId }, '200000000000000', props.price)\n  }\n\n  const price = fromNear(props.price)\n  const appCommission = price / 100\n  let artDaoProfit = price / 10\n  let ownerPrice = price - appCommission - artDaoProfit\n  if (!props.ownerId) {\n    artDaoProfit += ownerPrice\n    ownerPrice = 0\n  }\n\n  const newPrice = price * 1.2\n\n  return (\n    <div>\n      <button\n        className='btn btn-success'\n        disabled={!props.signedIn}\n        onClick={(e) => buyCard(e)}\n      >\n        Buy for {price.toFixed(2)} NEAR\n      </button>\n      <div className='text-muted text-start'>\n        Price breakdown:\n        <ul>\n          {props.ownerId && (\n            <li>Owner @{props.ownerId} will get {ownerPrice.toFixed(2)} NEAR</li>\n          )}\n          <li>Art DAO will get {artDaoProfit.toFixed(2)} NEAR</li>\n          <li>1% App commission is {appCommission.toFixed(2)} NEAR</li>\n        </ul>\n        <p>\n          The new price will be {newPrice.toFixed(2)} NEAR\n        </p>\n      </div>\n    </div>\n  )\n}\n\nfunction rules () {\n  return (\n    <div>\n      <h4>Hello</h4>\n      <ul>\n        <p>\n        This is NEAR Account Marketplace.\n        It allows you to sell, bet and buy NEAR Account names.\n        </p>\n      </ul>\n\n      <h4>For whom</h4>\n      <ul>\n        <p>\n          Founders &mdash; to allow you to find brilliant account names and place them onto the market for selling.\n        </p>\n        <p>\n          Believers &mdash; to participate in finding fair price, taking rewards for your faithful evaluation and wisdom.\n        </p>\n        <p>\n          Claimers &mdash; to obtain perfect account names for inner usage, personal collection or further resales.\n        </p>\n      </ul>\n\n      <h4>Basics</h4>\n      <ul>\n        <p>Initial placement costs ~0.42 NEAR. Initial claim price is 1 NEAR. There are two operations available:</p>\n        <li>\n          <p>\n            <strong>Place a bet. </strong>\n          This costs half of the current price (starts from 0.5 NEAR at initial state).\n          The payment goes to previous believers, and the price increases for x1.2 times.\n          </p>\n        </li>\n        <li>\n          <p>\n            <strong>Claim an account. </strong>\n          This costs full price. You need to wait 48 hours to make sure no one wants\n          to bet on the account. If someone will bet within 48 hours, you will receive\n          all your funds back plus forfeits paid by believer who bets. If no one will bet,\n          the account is totally yours, congratulations!\n          </p>\n        </li>\n      </ul>\n\n      <h4>Rewards for bets</h4>\n      <ul>\n        <p>\n        Each new bet triggers the reward distribution function for previous believers.\n        This means, if you even bet only once, you will receive rewards multiple times.\n        The function converges to 25% rewards for each bet.\n        </p>\n        <p>\n          <i>Example. Let's say, you bet 0.6 NEAR for <strong>apple.near</strong>.\n          In a couple days its price has been increased by series of bets,\n          and you have been received 0.75 NEAR rewards for that bet in total.\n          </i>\n        </p>\n      </ul>\n\n      <h4>Rewards for claims</h4>\n      <ul>\n        <p>\n          Claim is the most important and unique procedure as it finalizes\n          the lifetime of account on the market.\n          The rewards for the successful claim are the biggest.\n        </p>\n        <p>\n          First of all, the founder of the account gets 25% of claim price as additional reward.\n          It means, even not betting at all, it's still possible to take huge rewards by\n          bringing awesome account names to the market.\n        </p>\n        <p>\n          <i>Due to importance of claiming accounts, as it helps for the main purpose of the project,\n          the marketplace takes zero commission for claiming.\n          </i>\n        </p>\n      </ul>\n\n      <h4>Commission</h4>\n      <ul>\n        <p>\n          Marketplace takes 5% commission for each bet plus small constant for initial placement (~0.42 NEAR).\n        </p>\n        <p>\n          Marketplace takes 5% commission in addition, in case of betting for account which is under claiming.\n          This is necessary to prevent holding the account with no willing to actually claim it.\n          Strategies that disturbing market in such way are not welcomed as they diverge with\n          the purpose of the marketplace.\n        </p>\n        <p>\n        Marketplace takes zero commission for claim.\n        </p>\n      </ul>\n\n      <h4>Forfeits</h4>\n      <ul>\n        <p>\n          Forfeit is an additional cost for placing a bet while the account is under claiming.\n          Its value grows linearly from 0% at the moment when claim requested,\n          and up to 20% at the end of 48-hours period.\n          Forfeits are paid to claimers directly.\n          The purpose of forfeit is to pay for claimers' willing to obtain an account.\n        </p>\n      </ul>\n\n      <h4>Specific cases</h4>\n      <ul>\n        <p>\n          Knowing the mechanics, try to find your personal way to reach the maximal value.\n          There are couple examples that may help you.\n        </p>\n        <li>\n          <p>\n            <strong>Using multiple accounts and place series of bets. </strong>\n            As all Believers behind their accounts are anonymous,\n            you can use multiple accounts while betting.\n            That's why there is no reason to disallow to bet multiple times from the same\n            account - you can simply bet from another one.\n            You may use this trick if you want to hide your interest or intentions\n            by spreading up your bets between multiple accounts.\n          </p>\n        </li>\n        <li>\n          <p>\n            <strong>Sell the account for the full price. </strong>\n            If you are sure about fair price, you shouldn't wait until others bet.\n            You can simply bet as many times as necessary to increase the price up\n            to the value that makes sense to you.\n            In this case you may take up to 87.5% rewards taken from claimer directly,\n            not sharing with anyone.\n          </p>\n        </li>\n        <p>\n          Also mechanics is tuned in such way to make sure it's impossible to take less than you bet.\n        </p>\n      </ul>\n\n      <h4>Account claiming procedure</h4>\n      <ul>\n        <p>\n         1. (For experts) replace public key\n         2. TBD\n        </p>\n      </ul>\n\n      <h4>Example of distribution</h4>\n      <ul>\n        <p>\n        The following spreadsheet shows rewards distribution for an account\n        that has been bet for 15 times and claimed afterwards. 0-th bet means initial\n        offering from founder, all other lines correspond to bets.\n        </p>\n        <p>\n          <samp>\n          Claim price: 15.407\n            <br />\n            Sum of bets: 36.4342\n            <br />\n            Commission: 2.2175\n            <br />\n            0 bet:  0.4167,  rewards:  4.6018,   ratio:  11.0442\n            <br />\n 1 bet:  0.5000,  rewards:  0.6250,   ratio:  1.2500\n            <br />\n 2 bet:  0.6000,  rewards:  0.7500,   ratio:  1.2500\n            <br />\n 3 bet:  0.7200,  rewards:  0.9000,   ratio:  1.2500\n            <br />\n 4 bet:  0.8640,  rewards:  1.0800,   ratio:  1.2500\n            <br />\n 5 bet:  1.0368,  rewards:  1.2959,   ratio:  1.2499\n            <br />\n 6 bet:  1.2442,  rewards:  1.5550,   ratio:  1.2499\n            <br />\n 7 bet:  1.4930,  rewards:  1.8656,   ratio:  1.2496\n            <br />\n 8 bet:  1.7916,  rewards:  2.2375,   ratio:  1.2489\n            <br />\n 9 bet:  2.1499,  rewards:  2.6811,   ratio:  1.2471\n            <br />\n 10 bet:  2.5799,  rewards:  3.2047,   ratio:  1.2422\n            <br />\n 11 bet:  3.0959,  rewards:  3.8073,   ratio:  1.2298\n            <br />\n 12 bet:  3.7150,  rewards:  4.4595,   ratio:  1.2004\n            <br />\n 13 bet:  4.4581,  rewards:  5.0908,   ratio:  1.1419\n            <br />\n 14 bet:  5.3497,  rewards:  5.8400,   ratio:  1.0917\n            <br />\n 15 bet:  6.4196,  rewards:  9.6294,   ratio:  1.5000\n            <br />\n Sum of rewards: 49.6237\n          </samp>\n        </p>\n      </ul>\n\n    </div>\n  )\n}\n\nexport { rules, fromNear, BuyButton }\n","import React, { useEffect, useRef, useState } from 'react'\nimport BrokenCard from '../images/tomato.png'\nimport LoadingCard from '../images/avocado.gif'\n\nconst loadedCards = {}\nconst loadedImages = {}\nconst cardPreloading = {}\n\nfunction preloadCard (cardId) {\n  if (cardId in cardPreloading) {\n    return cardPreloading[cardId]\n  }\n  cardPreloading[cardId] = new Promise((resolve) => {\n    loadedImages[cardId] = new Image()\n    loadedImages[cardId].onload = () => {\n      loadedCards[cardId] = true\n      resolve()\n    }\n    loadedImages[cardId].onerror = (e) => {\n      loadedCards[cardId] = false\n      resolve()\n    }\n    loadedImages[cardId].src = `https://i.berry.cards/${cardId}`\n  })\n  return cardPreloading[cardId]\n}\n\nfunction CardImage (props) {\n  const [cardImage, setCardImage] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [badCard, setBadCard] = useState(false)\n  const canvasEl = useRef(null)\n\n  const cardReady = props.cardReady\n  const cardId = props.cardId\n\n  useEffect(() => {\n    setLoading(true)\n    setCardImage(null)\n    cardReady(false)\n    setBadCard(false)\n    preloadCard(cardId).then(() => {\n      setBadCard(!loadedCards[cardId])\n      setLoading(false)\n      if (loadedCards[cardId]) {\n        cardReady(true)\n        setCardImage(loadedImages[cardId])\n      }\n    })\n  }, [cardId, cardReady, canvasEl])\n\n  useEffect(() => {\n    if (canvasEl.current && cardImage) {\n      const ctx = canvasEl.current.getContext('2d')\n      ctx.drawImage(cardImage, 0, 0)\n    }\n  }, [cardImage])\n\n  return (\n    <div>\n      {loading ? (\n        <img className={props.className} src={LoadingCard} alt={`The card #${cardId} is loading`} />\n      ) : badCard ? (\n        <img className={props.className} src={BrokenCard} alt={`The card #${cardId} is broken`} />\n      ) : ('')}\n      <canvas\n        className={`${props.className}${(!cardImage || loading || badCard) ? ' d-none' : ''}`}\n        ref={canvasEl}\n        width={400}\n        height={400}\n        alt={`Card #${cardId}`}\n      />\n    </div>\n  )\n}\n\nexport { preloadCard, CardImage }\n","import React from 'react'\nimport { fromNear } from './Helpers'\nimport { Link } from 'react-router-dom'\n\nfunction PriceButton (props) {\n  return (\n    <div>\n      <Link\n        to={`/c/${props.cardId}`}\n        className='btn btn-success' disabled={!props.signedIn}\n      >\n        {fromNear(props.price).toFixed(2)} NEAR\n      </Link>\n    </div>\n  )\n}\n\nexport default PriceButton\n","import './CardPreview.scss'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { CardImage } from './CardImage'\nimport { Link } from 'react-router-dom'\nimport PriceButton from './PriceButton'\n\nfunction CardPreview (props) {\n  const [rating, setRating] = useState(props.rating)\n  const cardId = props.cardId\n  const propsRating = props.rating\n\n  const fetchRating = useCallback(async () => {\n    return await props._near.contract.get_rating({\n      card_id: cardId\n    })\n  }, [props._near, cardId])\n\n  useEffect(() => {\n    if (props.connected) {\n      if (!propsRating) {\n        fetchRating().then(setRating)\n      } else {\n        setRating(propsRating)\n      }\n    }\n  }, [props.connected, propsRating, fetchRating])\n\n  return props.cardId ? (\n    <div className='card card-preview m-2'>\n      <Link to={`/c/${cardId}`}>\n        <CardImage className='card-img-top' cardId={cardId} cardReady={() => false} />\n      </Link>\n      <div className='card-body'>\n        #{cardId}\n      </div>\n      <div className='card-footer text-center'>\n        <PriceButton {...props} cardId={cardId} price={rating} />\n      </div>\n    </div>\n  ) : (\n    <div className='card card-preview m-2'>\n      <div className='d-flex justify-content-center'>\n        <div className='spinner-grow' role='status'>\n          <span className='visually-hidden'>Loading...</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CardPreview\n","import './Market.scss'\nimport React, { useEffect, useState } from 'react'\nimport uuid from 'react-uuid'\nimport CardPreview from '../components/CardPreview'\nimport InfiniteScroll from 'react-infinite-scroller'\n\nconst FetchLimit = 25\n\nfunction DiscoverPage (props) {\n  const [feed, setFeed] = useState([])\n  const [hasMore, setHasMore] = useState(false)\n  const [gkey] = useState(uuid())\n\n  const fetchMore = async () => {\n    const f = [...feed]\n    const lastKey = f.length > 0 ? f[f.length - 1] : null\n    const fetched = await props._near.contract.get_top({\n      from_key: lastKey,\n      limit: FetchLimit\n    })\n    f.push(...fetched)\n    if (fetched.length === 0) {\n      setHasMore(false)\n    }\n    setFeed(f)\n  }\n\n  useEffect(() => {\n    if (props.connected) {\n      setHasMore(true)\n    }\n  }, [props.connected])\n\n  const cards = feed.map(([rating, cardId]) => {\n    const key = `${gkey}-${cardId}`\n    return (\n      <CardPreview {...props} key={key} cardId={cardId} rating={rating} />\n    )\n  })\n\n  const loader = (\n    <div className='d-flex justify-content-center' key={`${gkey}-loader`}>\n      <div className='spinner-grow' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </div>\n    </div>\n  )\n\n  return (\n    <div>\n      <div className='container'>\n        <div className='row justify-content-md-center'>\n          <div className='col'>\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={fetchMore}\n              hasMore={hasMore}\n              loader={loader}\n            >\n              {cards}\n            </InfiniteScroll>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DiscoverPage\n","import './Claims.scss'\nimport React, { useEffect, useState } from 'react'\nimport uuid from 'react-uuid'\nimport CardPreview from '../components/CardPreview'\nimport InfiniteScroll from 'react-infinite-scroller'\n\nconst FetchLimit = 25\n\nfunction DiscoverPage (props) {\n  const [feed, setFeed] = useState([])\n  const [hasMore, setHasMore] = useState(false)\n  const [gkey] = useState(uuid())\n\n  const fetchMore = async () => {\n    const f = [...feed]\n    const lastKey = f.length > 0 ? f[f.length - 1] : null\n    const fetched = await props._near.contract.get_top({\n      from_key: lastKey,\n      limit: FetchLimit\n    })\n    f.push(...fetched)\n    if (fetched.length === 0) {\n      setHasMore(false)\n    }\n    setFeed(f)\n  }\n\n  useEffect(() => {\n    if (props.connected) {\n      setHasMore(true)\n    }\n  }, [props.connected])\n\n  const cards = feed.map(([rating, cardId]) => {\n    const key = `${gkey}-${cardId}`\n    return (\n      <CardPreview {...props} key={key} cardId={cardId} rating={rating} />\n    )\n  })\n\n  const loader = (\n    <div className='d-flex justify-content-center' key={`${gkey}-loader`}>\n      <div className='spinner-grow' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </div>\n    </div>\n  )\n\n  return (\n    <div>\n      <div className='container'>\n        <div className='row justify-content-md-center'>\n          <div className='col'>\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={fetchMore}\n              hasMore={hasMore}\n              loader={loader}\n            >\n              {cards}\n            </InfiniteScroll>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DiscoverPage\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { fromNear, rules } from '../components/Helpers'\n\nfunction StatsPage (props) {\n  const [stats, setStats] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  const fetchStats = useCallback(async () => {\n    const [t, numAccounts] = await Promise.all([\n      props._near.contract.get_trade_data(),\n      props._near.contract.get_num_accounts()\n    ])\n    return {\n      numAccounts,\n      numPurchases: t.num_purchases,\n      numUniqueCardsBought: t.num_unique_cards_bought,\n      nearVolume: fromNear(t.near_volume),\n      appCommission: fromNear(t.app_owner_profit),\n      artDaoProfit: fromNear(t.art_dao_profit),\n      appOwnerId: t.app_owner_id,\n      artDaoId: t.art_dao_id,\n      totalVotes: t.total_votes\n    }\n  }, [props._near])\n\n  useEffect(() => {\n    if (props.connected) {\n      fetchStats().then((stats) => {\n        setStats(stats)\n        setLoading(false)\n      })\n    }\n  }, [props.connected, fetchStats])\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        {loading ? (\n          <div className='col'>\n            <div className='d-flex justify-content-center'>\n              <div className='spinner-grow' role='status'>\n                <span className='visually-hidden'>Loading...</span>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className='col col-12 col-lg-8 col-xl-8'>\n            {rules()}\n            <div>\n              <h3>Global Stats</h3>\n              <ul>\n              TBD\n                {/* <li>Num accounts: {stats.numAccounts}</li>\n                <li>Total votes: {stats.totalVotes}</li>\n                <li>Total purchases: {stats.numPurchases}</li>\n                <li>Total unique purchases: {stats.numUniqueCardsBought}</li>\n                <li>Total volume: {stats.nearVolume.toFixed(2)} NEAR</li>\n                <li>Total Art DAO profit: {stats.artDaoProfit.toFixed(2)} NEAR</li>\n                <li>Art DAO account ID: <a href={`https://explorer.near.org/accounts/${stats.artDaoId}`}>@{stats.artDaoId}</a></li>\n        <li>Total App commission: {stats.appCommission.toFixed(2)} NEAR</li> */}\n              </ul>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default StatsPage\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport CardPreview from '../components/CardPreview'\nimport uuid from 'react-uuid'\n\nfunction AccountPage (props) {\n  const { accountId } = useParams()\n  const [account, setAccount] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [cardIds, setCardsIds] = useState([])\n  const [gkey] = useState(uuid())\n\n  const fetchCards = useCallback(async () => {\n    const account = await props._near.getAccount(accountId)\n    if (!account) {\n      return\n    }\n    setAccount(account)\n    return await account.fetchCards()\n  }, [props._near, accountId])\n\n  useEffect(() => {\n    if (props.connected) {\n      fetchCards().then((cardIds) => {\n        cardIds.sort((a, b) => b[1] - a[1])\n        setCardsIds(cardIds)\n        setLoading(false)\n      })\n    }\n  }, [props.connected, fetchCards])\n\n  const cards = cardIds.map(([cardId, rating]) => {\n    const key = `${gkey}-${cardId}`\n    return (\n      <CardPreview {...props} key={key} cardId={cardId} rating={rating} />\n    )\n  })\n\n  return (\n    <div className='container'>\n      <div className='row justify-content-md-center'>\n        {loading ? (\n          <div className='col'>\n            <div className='d-flex justify-content-center'>\n              <div className='spinner-grow' role='status'>\n                <span className='visually-hidden'>Loading...</span>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className='col '>\n            <h3>{accountId === props.signedAccountId ? 'Your cards' : `Cards owned by @${accountId}`}</h3>\n            <div>\n              {cards}\n            </div>\n          </div>\n        )}\n        {!account ? (\n          <div className='col col-12 col-lg-8 col-xl-6'>\n            <div className='d-flex justify-content-center'>\n              <div className='spinner-grow' role='status'>\n                <span className='visually-hidden'>Loading...</span>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className='col col-12 col-lg-4 col-xl-4'>\n            <h3>Stats</h3>\n            <ul>\n              <li>Num cards: {account.numCards}</li>\n              <li>Purchase volume: {account.purchaseVolume.toFixed(2)} NEAR</li>\n              <li>Num purchases: {account.numPurchases}</li>\n              <li>Sale profit: {account.saleProfit.toFixed(2)} NEAR</li>\n              <li>Num sales: {account.numSales}</li>\n              <li>Num votes: {account.numVotes}</li>\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default AccountPage\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { BuyButton, fromNear } from './Helpers'\nimport { CardImage, preloadCard } from './CardImage'\nimport TimeAgo from 'timeago-react'\nimport { Link } from 'react-router-dom'\nimport PriceButton from './PriceButton'\n\nconst mapCardInfo = (c) => {\n  return c ? {\n    ownerId: c.owner_id,\n    purchasePrice: fromNear(c.purchase_price),\n    purchaseTime: new Date(parseFloat(c.purchase_time) / 1e6),\n    volume: fromNear(c.volume),\n    artDaoProfit: fromNear(c.art_dao_profit),\n    numTrades: c.num_trades\n  } : {\n    ownerId: null,\n    purchasePrice: 0,\n    purchaseTime: null,\n    volume: 0,\n    artDaoProfit: 0,\n    numTrades: 0\n  }\n}\n\nfunction Card (props) {\n  const [cardInfo, setCardInfo] = useState(null)\n  const cardId = props.cardId\n  const refreshTime = props.refreshTime\n  const hidden = props.hidden\n\n  const fetchInfo = useCallback(async () => {\n    const rating = await props._near.contract.get_rating({\n      card_id: cardId\n    })\n    const cardInfo = mapCardInfo(await props._near.contract.get_card_info({\n      card_id: cardId\n    }))\n    cardInfo.refreshTime = refreshTime\n    cardInfo.rating = rating\n    return cardInfo\n  }, [props._near, cardId, refreshTime])\n\n  useEffect(() => {\n    if (props.connected && !hidden) {\n      preloadCard(cardId)\n      fetchInfo().then(setCardInfo)\n    }\n  }, [props.connected, fetchInfo, cardId, hidden])\n\n  return cardInfo ? (\n    <div className='card m-2'>\n      <CardImage className='card-img-top' cardId={cardId} cardReady={() => false} />\n      <div className='card-body text-start'>\n        <h3>#{cardId}</h3>\n        {cardInfo.ownerId ? (\n          <div>\n            <p>\n              Owned by {cardInfo.ownerId === props.signedAccountId ? 'you' : (\n                <Link to={`/a/${cardInfo.ownerId}`}>@{cardInfo.ownerId}</Link>\n              )}<br />\n              Purchased <TimeAgo datetime={cardInfo.purchaseTime} /> for {cardInfo.purchasePrice.toFixed(2)} NEAR<br />\n            </p>\n            <p>\n              Total card volume {cardInfo.volume.toFixed(2)} NEAR<br />\n              Art DAO got {cardInfo.artDaoProfit.toFixed(2)} NEAR<br />\n            </p>\n          </div>\n        ) : (\n          <div>\n            <p>\n              Not owned by anyone.\n            </p>\n          </div>\n        )}\n      </div>\n      <div className='card-footer text-center'>\n        {cardInfo.ownerId === props.signedAccountId ? (\n          <PriceButton {...props} cardId={cardId} price={cardInfo.rating} />\n        ) : (\n          <BuyButton {...props} cardId={cardId} price={cardInfo.rating} ownerId={cardInfo.ownerId} />\n        )}\n      </div>\n    </div>\n  ) : (\n    <div className='card m-2'>\n      <div className='d-flex justify-content-center'>\n        <div className='spinner-grow' role='status'>\n          <span className='visually-hidden'>Loading...</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport { useParams } from 'react-router'\nimport Card from '../components/Card'\n\nfunction CardPage (props) {\n  const { cardId } = useParams()\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        <div className='col col-12 col-lg-8 col-xl-6'>\n          <Card {...props} cardId={parseInt(cardId)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CardPage\n","import React from 'react'\nimport 'error-polyfill'\nimport 'bootstrap/dist/js/bootstrap.bundle'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.scss'\nimport './gh-fork-ribbon.css'\nimport * as nearAPI from 'near-api-js'\nimport Logo from './images/logo.png'\nimport { HashRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport { fromNear } from './components/Helpers'\nimport ls from 'local-storage'\nimport MarketPage from './pages/Market'\nimport ClaimsPage from './pages/Claims'\nimport RulesPage from './pages/Rules'\nimport ProfilePage from './pages/Profile'\nimport AccountPage from './pages/Account'\n\nconst IsMainnet = window.location.hostname === 'berry.cards'\nconst TestNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  archivalNodeUrl: 'https://rpc.testnet.internal.near.org',\n  contractName: 'dev-1614796345972-8721304',\n  walletUrl: 'https://wallet.testnet.near.org'\n}\nconst MainNearConfig = {\n  networkId: 'mainnet',\n  nodeUrl: 'https://rpc.mainnet.near.org',\n  archivalNodeUrl: 'https://rpc.mainnet.internal.near.org',\n  contractName: 'cards.berryclub.ek.near',\n  walletUrl: 'https://wallet.near.org'\n}\n\nconst NearConfig = IsMainnet ? MainNearConfig : TestNearConfig\n\nconst FetchLimit = 50\n\nconst mapAccount = (a) => {\n  return {\n    requests: a.requests,\n    numCards: a.num_cards,\n    purchaseVolume: fromNear(a.purchase_volume),\n    numPurchases: a.num_purchases,\n    saleProfit: fromNear(a.sale_profit),\n    numSales: a.num_sales,\n    numVotes: a.num_votes\n  }\n}\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this._near = {}\n\n    this._near.lsKey = NearConfig.contractName + ':v01:'\n    this._near.lsKeyRecentCards = this._near.lsKey + 'recentCards'\n\n    this.state = {\n      connected: false,\n      isNavCollapsed: true,\n      account: null,\n      requests: null,\n      recentCards: ls.get(this._near.lsKeyRecentCards) || []\n    }\n\n    this._initNear().then(() => {\n      this.setState({\n        signedIn: !!this._near.accountId,\n        signedAccountId: this._near.accountId,\n        connected: true\n      })\n    })\n  }\n\n  async _initNear () {\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore()\n    const near = await nearAPI.connect(Object.assign({ deps: { keyStore } }, NearConfig))\n    this._near.keyStore = keyStore\n    this._near.near = near\n\n    this._near.walletConnection = new nearAPI.WalletConnection(near, NearConfig.contractName)\n    this._near.accountId = this._near.walletConnection.getAccountId()\n\n    this._near.account = this._near.walletConnection.account()\n    this._near.contract = new nearAPI.Contract(this._near.account, NearConfig.contractName, {\n      viewMethods: ['get_account', 'get_num_accounts', 'get_accounts', 'get_num_cards', 'get_top', 'get_rating', 'get_trade_data', 'get_card_info', 'get_account_cards'],\n      changeMethods: ['register_account', 'vote', 'buy_card']\n    })\n\n    this._near.accounts = {}\n\n    this._near.getAccount = (accountId) => {\n      if (accountId in this._near.accounts) {\n        return this._near.accounts[accountId]\n      }\n      this._near.accounts[accountId] = Promise.resolve((async () => {\n        const a = await this._near.contract.get_account({ account_id: accountId })\n        const account = a ? mapAccount(a) : null\n        if (account) {\n          account.fetchCards = () => {\n            if (account.cardFetching) {\n              return account.cardFetching\n            }\n            const promises = []\n            for (let i = 0; i < account.numCards; i += FetchLimit) {\n              promises.push(this._near.contract.get_account_cards({\n                account_id: accountId,\n                from_index: i,\n                limit: FetchLimit\n              }))\n            }\n            account.cardFetching = Promise.resolve((async () => {\n              return (await Promise.all(promises)).flat()\n            })())\n            return account.cardFetching\n          }\n        }\n        return account\n      })())\n      return this._near.accounts[accountId]\n    }\n\n    if (this._near.accountId) {\n      let account = await this._near.getAccount(this._near.accountId)\n      if (account === null) {\n        await this._near.contract.register_account()\n        delete this._near.accounts[this._near.accountId]\n        account = await this._near.getAccount(this._near.accountId)\n      }\n      this.setState({\n        account,\n        requests: account.requests\n      })\n    }\n  }\n\n  async requestSignIn (e) {\n    e && e.preventDefault()\n    const appTitle = 'Accounts Marketplace'\n    await this._near.walletConnection.requestSignIn(\n      NearConfig.contractName,\n      appTitle\n    )\n    return false\n  }\n\n  async logOut () {\n    this._near.walletConnection.signOut()\n    this._near.accountId = null\n    this.setState({\n      signedIn: !!this._accountId,\n      signedAccountId: this._accountId\n    })\n  }\n\n  popRequest (c) {\n    const requests = this.state.requests.slice(1)\n    this.setState({\n      requests\n    }, c)\n  }\n\n  addRequest (r, c) {\n    const requests = this.state.requests.slice(0)\n    requests.push(r)\n    this.setState({\n      requests\n    }, c)\n  }\n\n  addRecentCard (cardId) {\n    let recentCards = this.state.recentCards.slice(0)\n    const index = recentCards.indexOf(cardId)\n    if (index !== -1) {\n      recentCards.splice(index, 1)\n    }\n    recentCards.unshift(cardId)\n    recentCards = recentCards.slice(0, 5)\n    ls.set(this._near.lsKeyRecentCards, recentCards)\n    this.setState({\n      recentCards\n    })\n  }\n\n  async refreshAllowance () {\n    alert(\"You're out of access key allowance. Need sign in again to refresh it\")\n    await this.logOut()\n    await this.requestSignIn()\n  }\n\n  render () {\n    const passProps = {\n      _near: this._near,\n      updateState: (s, c) => this.setState(s, c),\n      popRequest: (c) => this.popRequest(c),\n      addRequest: (r, c) => this.addRequest(r, c),\n      addRecentCard: (cardId) => this.addRecentCard(cardId),\n      refreshAllowance: () => this.refreshAllowance(),\n      ...this.state\n    }\n    const header = !this.state.connected ? (\n      <div>Connecting... <span className='spinner-grow spinner-grow-sm' role='status' aria-hidden='true' /></div>\n    ) : (this.state.signedIn ? (\n      <div>\n        <button\n          className='btn btn-outline-secondary'\n          onClick={() => this.logOut()}\n        >Sign out ({this.state.signedAccountId})\n        </button>\n      </div>\n    ) : (\n      <div>\n        <button\n          className='btn btn-primary'\n          onClick={(e) => this.requestSignIn(e)}\n        >Sign in with NEAR Wallet\n        </button>\n      </div>\n    ))\n\n    return (\n      <div className='App'>\n        <Router basename={process.env.PUBLIC_URL}>\n          <nav className='navbar navbar-expand-lg navbar-light bg-light mb-3'>\n            <div className='container-fluid'>\n              <Link className='navbar-brand' to='/' title='near.ws'>\n                <img src={Logo} alt='NEAR Accounts Marketplace' className='d-inline-block align-middle' />\n                [BETA] NEAR Accounts Marketplace\n              </Link>\n              <button\n                className='navbar-toggler' type='button' data-bs-toggle='collapse'\n                data-bs-target='#navbarSupportedContent' aria-controls='navbarSupportedContent'\n                aria-expanded='false' aria-label='Toggle navigation'\n              >\n                <span className='navbar-toggler-icon' />\n              </button>\n              <div className='collapse navbar-collapse' id='navbarSupportedContent'>\n                <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\n                  <li className='nav-item'>\n                    <Link className='nav-link' aria-current='page' to='/'>Accounts</Link>\n                  </li>\n                  <li className='nav-item'>\n                    <Link className='nav-link' aria-current='page' to='/claims'>Claims</Link>\n                  </li>\n                  {this.state.signedIn && (\n                    <li className='nav-item'>\n                      <Link\n                        className='nav-link' aria-current='page'\n                        to={`/profile/${this.state.signedAccountId}`}\n                      >Profile\n                      </Link>\n                    </li>\n                  )}\n                  <li className='nav-item'>\n                    <Link className='nav-link' aria-current='page' to='/rules'>Rules</Link>\n                  </li>\n                </ul>\n                <form className='d-flex'>\n                  {header}\n                </form>\n              </div>\n            </div>\n          </nav>\n\n          <a\n            className='github-fork-ribbon right-bottom fixed' href='https://github.com/kouprin/accounts-marketplace' data-ribbon='Fork me on GitHub'\n            title='Fork me on GitHub'\n          >Fork me on GitHub\n          </a>\n\n          <Switch>\n            <Route exact path='/'>\n              <MarketPage {...passProps} />\n            </Route>\n            <Route exact path='/claims'>\n              <ClaimsPage {...passProps} />\n            </Route>\n            <Route exact path='/rules'>\n              <RulesPage {...passProps} />\n            </Route>\n            <Route exact path='/profile/:profileId'>\n              <ProfilePage {...passProps} />\n            </Route>\n            <Route exact path='/account/:accountId'>\n              <AccountPage {...passProps} />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}